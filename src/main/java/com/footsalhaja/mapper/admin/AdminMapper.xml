<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="com.footsalhaja.mapper.admin.AdminMapper">
 
 	<select id="selectWatingQnAList" resultType="com.footsalhaja.domain.qna.QnADto">
 	<!-- qnaId category title status userId insertDatetime -->
 		SELECT qnaId,category,title,member_userId AS userId,status,insertDatetime
 		FROM QnABoard
 		WHERE status = #{status}
 		ORDER BY insertDatetime DESC
 	</select>
 	
 	<select id="selectAllBookedCount" resultType="int">
 		SELECT 
 			COUNT(b.bookId)
 		FROM
 			book b
 		LEFT JOIN member m ON m.userId = b.member_userId
 		LEFT JOIN location l ON b.location_locationId = l.locationId	
 		WHERE

 		<if test="d1 != '' and d2 != '' ">
	 		b.bookDate BETWEEN #{d1} AND #{d2}
 		AND
 		</if>
 		
 		<if test="s != ''">
	 		b.status = #{status}	
 		AND
 		</if>
 		
	 	<if test="l != ''">
			l.locationId = #{l}
		AND
		</if>
	 	(
		<trim prefixOverrides="OR">
			<if test="type == 'all' or type == 'title'">
			OR b.title LIKE #{keyword}
			</if>
			
			<if test="type == 'all' or type == 'content'">
			OR b.content LIKE #{keyword}
			</if>
			
			<if test="type == 'all' or type == 'userId'">
			OR m.userId LIKE #{keyword}
			</if>
			
			<if test="type == 'all' or type == 'stadiumName'">
			OR l.stadiumName LIKE #{keyword}
			</if>
		</trim> 
		) 	
		
 			
 	</select>
 	<!-- bookId, title, content, matchType, level, status, 
 	bookDate, bookTime, insertDatetime, teamGender, location_locationId, member_userId -->
 	<select id="selectBookedListAll" resultType="com.footsalhaja.domain.main.BookDto">
 		SELECT 
 			b.bookId,
 			b.title,
 			b.content,
 			b.matchType,
 			b.level,
 			b.status, 
 			b.bookDate,
 			b.bookTime,
 			b.insertDatetime,
 			b.teamGender,
 			l.locationId,
 			l.stadiumName,
 			m.userId		
 		FROM book b
 		LEFT JOIN member m ON b.member_userId = m.userId
 		LEFT JOIN location l ON b.location_locationId = l.locationId
 		WHERE 
 		<if test="d1 != '' and d2 != '' ">
	 		b.bookDate BETWEEN #{d1} AND #{d2}
 		AND
 		</if>
 		
	 	<if test="s != ''">
	 		b.status = #{status}	
 		AND
 		</if>
 		
	 	<if test="l != ''">
			l.locationId = #{l}
		AND
		</if>
		
	 	(
		<trim prefixOverrides="OR">
			<if test="type == 'all' or type == 'title'">
			OR b.title LIKE #{keyword}
			</if>
			
			<if test="type == 'all' or type == 'content'">
			OR b.content LIKE #{keyword}
			</if>
						
			<if test="type == 'all' or type == 'userId'">
			OR m.userId LIKE #{keyword}
			</if>
			
			<if test="type == 'all' or type == 'stadiumName'">
			OR l.stadiumName LIKE #{keyword}
			</if>
		</trim> 
		) 	
		GROUP BY b.bookId
 		
 		ORDER BY b.bookDate ASC
 		
 		LIMIT #{offset}, #{records}
 	</select>
 	
 	<select id="selectBookedListLimit" resultType="com.footsalhaja.domain.main.BookDto">
 		SELECT 
 			b.bookId,
 			b.title,
 			b.content,
 			b.matchType,
 			b.level,
 			b.status, 
 			b.bookDate,
 			b.bookTime,
 			b.insertDatetime,
 			b.teamGender,
 			l.locationId,
 			l.stadiumName,
 			m.userId	
 		FROM book b
 		LEFT JOIN member m ON b.member_userId = m.userId
 		LEFT JOIN location l ON b.location_locationId = l.locationId
 		WHERE b.status = #{status}
 		AND (b.bookDate >= CURRENT_DATE)
 		ORDER BY b.insertDatetime DESC
 	</select>
 	
 	<insert id="insertVisitCount">
 		INSERT INTO Visit (visitDate) 
 		VALUES (now())
 	</insert>
 	<select id="selectTodayVisitCount" resultType="int">
 		SELECT COUNT(visitDate)
 		FROM Visit
 		WHERE visitDate = CURRENT_DATE()
 	</select>
 	<select id="selectTodaybookedCount" resultType="int">
 		SELECT COUNT(*)
 		FROM book
 		WHERE status = 0 
 		AND (bookDate >= CURRENT_DATE)
 	</select>
 	<select id="selectTodayWaitingQnACount" resultType="int">
 		SELECT COUNT(*)
 		FROM QnABoard
 		WHERE status = #{status}
 	</select>
 	
 	<!-- 관리자 대시보드_ 이달의 방문자수, 예약수, 문의수 테이블의 COUNT ..  -->
 	<select id="chartListByDate" resultType="com.footsalhaja.domain.admin.adminColChartDto">
		SELECT 
			v.visitDate AS date,
		    COUNT(distinct v.visitId) AS visitCount,
			COUNT(distinct b.bookId) AS bookedCount,
			COUNT(distinct q.qnaId) AS qnaCount
		FROM Visit v
		LEFT JOIN book b ON DATE(b.insertDatetime) = v.visitDate
		LEFT JOIN QnABoard q ON DATE(q.insertDatetime) = v.visitDate
		WHERE MONTH(v.visitDate) = MONTH(CURRENT_DATE)
		GROUP BY v.visitDate
 	</select>

 	
 	
 </mapper>